package com.infinity.javaprograms_du;
import android.annotation.SuppressLint;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AlertDialog;
import android.util.Log;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import com.github.barteksc.pdfviewer.PDFView;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.InterstitialAd;
import com.google.android.gms.ads.MobileAds;
import com.google.android.gms.ads.reward.RewardItem;
import com.google.android.gms.ads.reward.RewardedVideoAd;
import com.google.android.gms.ads.reward.RewardedVideoAdListener;
import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import java.util.HashMap;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import com.infinity.javaprograms_du.SignInActivity;
public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener,RewardedVideoAdListener {
    private TextView mEditTextTo;
    public static final int RequestSignInCode = 7;
    public GoogleApiClient googleApiClient;
    public  Double coins=100.0;
    public FirebaseAuth firebaseAuth;
    private FirebaseFirestore mFireStore;
    public TextView name,email;
    private InterstitialAd mInterstitialAd;
    public byte flag = 0, temp = 0;
    PDFView pdfView;
     private RewardedVideoAd mAd;
    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {
        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_home:
                    if(coins>=0)
                           temp = 1;
                {
                    if (flag == 1) {
                         pdfView.fromAsset("FirstLogic.pdf").load();
                    } else if (flag == 2) {
                        pdfView.fromAsset("SecondLogic.pdf").load();
                    } else if (flag == 3) {
                        pdfView.fromAsset("ThirdLogic.pdf").load();
                    } else if (flag == 4) {
                        pdfView.fromAsset("FourthLogic.pdf").load();
                    } else if (flag == 5) {
                         pdfView.fromAsset("fifthLogic.pdf").load();
                    } else if (flag == 6) {
                        pdfView.fromAsset("Sixth.pdf").load();
                    } else if (flag == 7) {
                        pdfView.fromAsset("SeventhLogic.pdf").load();
                    } else if (flag == 8) {
                        pdfView.fromAsset("EightLogic.pdf").load();
                    } else if (flag == 9) {
                        pdfView.fromAsset("NinthLogic.pdf").load();
                    } else if (flag == 10) {
                        pdfView.fromAsset("TenthLogic.pdf").load();
                    }
                    else if (flag == 11) {
                        pdfView.fromAsset("").load();
                    }
                    else if (flag == 12) {
                        pdfView.fromAsset("").load();
                    }
                    else if (flag == 13) {
                        pdfView.fromAsset("").load();
                    }
                    else if (flag == 14) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 15) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 16) {
                         pdfView.fromAsset("").load();
                    }
                    else if (flag == 17) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 18) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 19) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 20) {
                           pdfView.fromAsset("").load();
                    }
                    else if (flag == 21) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 22) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 23) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 24) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 25) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 26) {
                          pdfView.fromAsset("").load();
                    }
                    else if (flag == 27) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 28) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 29) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 30) {
                            pdfView.fromAsset("").load();
                    }
                    return true;
                case R.id.navigation_dashboard:
                    temp = 2;
                    if (flag == 1) {
                        pdfView.fromAsset("CodeOne.pdf").load();
                    } else if (flag == 2) {
                        pdfView.fromAsset("CodeTwo.pdf").load();
                    } else if (flag == 3) {
                        pdfView.fromAsset("CodeThree.pdf").load();
                    } else if (flag == 4) {
                        pdfView.fromAsset("CodeFour.pdf").load();
                    } else if (flag == 5) {
                        pdfView.fromAsset("CodeFive.pdf").load();
                    } else if (flag == 6) {
                        pdfView.fromAsset("CodeSix.pdf").load();
                    } else if (flag == 7) {
                        pdfView.fromAsset("CodeSeven.pdf").load();
                    } else if (flag == 8) {
                        pdfView.fromAsset("CodeEight.pdf").load();
                    } else if (flag == 9) {
                        pdfView.fromAsset("CodeNine.pdf").load();
                    } else if (flag == 10) {
                        pdfView.fromAsset("CodeTen.pdf").load();
                    }
                    else if (flag == 11) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 12) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 13) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 14) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 15) {
                            pdfView.fromAsset("").load();
                    }

                    else if (flag == 16) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 17) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 18) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 19) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 20) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 21) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 22) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 23) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 24) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 25) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 26) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 27) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 28) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 29) {
                            pdfView.fromAsset("").load();
                    }
                    else if (flag == 30) {
                            pdfView.fromAsset("").load();
                    }
                    return true;
            }
            
            }
            return false;
        }
    };
      @Override
      protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mFireStore=FirebaseFirestore.getInstance();
        firebaseAuth =FirebaseAuth.getInstance();
        FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();
        showCoins();
         mFireStore.collection(firebaseUser.getDisplayName().toString()).document( firebaseUser.getEmail().toString()).get()
          .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
            @Override
            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
           if(task.isSuccessful()){
               DocumentSnapshot documentSnapshot=task.getResult();
               coins= documentSnapshot.getDouble("coins");
                Toast.makeText(MainActivity.this,"Total Coins "+coins,Toast.LENGTH_SHORT).show();
           }
            }
        });
          GoogleSignInOptions googleSignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                  .requestIdToken(getString(R.string.default_web_client_id))
                  .requestEmail()
                  .build();
          googleApiClient = new GoogleApiClient.Builder(MainActivity.this)
                  .enableAutoManage(MainActivity.this , new GoogleApiClient.OnConnectionFailedListener() {
                      @Override
                      public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {

                      }
                  } /* OnConnectionFailedListener */)
                  .addApi(Auth.GOOGLE_SIGN_IN_API, googleSignInOptions)
                  .build();

          MobileAds.initialize(getApplicationContext(),"ca-app-pub-3940256099942544/5224354917");
        mAd=MobileAds.getRewardedVideoAdInstance(this);
        mAd.setRewardedVideoAdListener(this);

        AdView adView = (AdView) findViewById(R.id.adView);
        adView.setAdListener(new ToastAdListener(this));
        AdRequest adRequest = new AdRequest.Builder()
                .setRequestAgent("android_studio:ad_template").build();
        adView.loadAd(adRequest);
        mEditTextTo = findViewById(R.id.edit_text_to);
        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
        mInterstitialAd = new InterstitialAd(MainActivity.this);
        pdfView = findViewById(R.id.pdfView);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        getSupportActionBar().setTitle("Java Practicals");

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();
        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
      }
    private void loadRewarededvideoAd()
    {
        if(!mAd.isLoaded()){
            mAd.loadAd("ca-app-pub-3940256099942544/5224354917",new AdRequest.Builder().build());
        }
    }
    
    public AlertDialog.Builder buildDialog2(Context c)
    {
        AlertDialog.Builder builder = new AlertDialog.Builder(c);
        builder.setTitle("Earn Coins");
        FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();
        builder.setMessage(firebaseUser.getDisplayName().toString()+" You have "+ coins +" coins");
        builder.setPositiveButton("Earn Coins", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                if(mAd.isLoaded()) {
                    mAd.show();
                }
                else {
                    loadRewarededvideoAd();
                    show();
                }
            }
        });
        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

            }
        });
        return builder;
    }
    private void show() {
        Toast.makeText(this,"Try Again",Toast.LENGTH_LONG).show();}

    public boolean isConnected(Context context) {
        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo netinfo = cm.getActiveNetworkInfo();
        if (netinfo != null && netinfo.isConnectedOrConnecting()) {
            android.net.NetworkInfo wifi = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
            android.net.NetworkInfo mobile = cm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
            if((mobile != null&&mobile.isConnectedOrConnecting()) || (wifi != null && wifi.isConnectedOrConnecting())) return true;
            else return false;
        } else
            return false;
    }
    public AlertDialog.Builder buildDialog(Context c) {
        AlertDialog.Builder builder = new AlertDialog.Builder(c);
        builder.setTitle("No Internet Connection");
        builder.setMessage("You need to have Mobile Data or wifi to access this. Press Ok to Exit");
        builder.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
            }
        });
        return builder;
    }
    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setTitle("Exit");
            builder.setMessage("Are you sure?");
            builder.setPositiveButton("Exit", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    Intent homeIntent = new Intent(Intent.ACTION_MAIN);
                    homeIntent.addCategory( Intent.CATEGORY_HOME );
                    homeIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                    startActivity(homeIntent);}
            });
            builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                }
            });
            AlertDialog dialog = builder.show();
        }
    }
    private void showCoins() {
        SharedPreferences sharedPreferences=getSharedPreferences("PREFS",MODE_PRIVATE);
        SharedPreferences.Editor editor;
        editor=sharedPreferences.edit();
        editor.putInt("INTRO",1);
        editor.apply();
        FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();
        mFireStore=FirebaseFirestore.getInstance();
        Map<String,Number>dataToAdd=new HashMap<>();
        dataToAdd.put("coins",coins);
        mFireStore.collection(firebaseUser.getDisplayName().toString()).document( firebaseUser.getEmail().toString()).set(dataToAdd).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                Toast.makeText(MainActivity.this,"Error",Toast.LENGTH_SHORT).show();
            }
        });
    }
       @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        //noinspection SimplifiableIfStatement
        if(id==R.id.action_bug) {
            String recipientList = mEditTextTo.getText().toString();
            String[] recipients = recipientList.split(",");
            Intent intent = new Intent(Intent.ACTION_SEND);
            intent.putExtra(Intent.EXTRA_EMAIL, recipients);
            intent.setType("message/rfc822");
            startActivity(Intent.createChooser(intent, "Choose an email client"));
            return true;
        }
        else if(id==R.id.action_rate){
            try {

                startActivity(new Intent(Intent.ACTION_VIEW,

                        Uri.parse("market://details?id=" + "com.infinity.javaprograms_du")));

            } catch (ActivityNotFoundException e) {

                startActivity(new Intent(Intent.ACTION_VIEW,

                        Uri.parse("http://play.google.com/store/apps/details?id=" + getPackageName())));

            }

            return true;
        }
        else if(id==R.id.action_share){
            Intent i = new Intent(android.content.Intent.ACTION_SEND);
             i.setType("text/plain");
             i.putExtra(android.content.Intent.EXTRA_TEXT, "My new app https://play.google.com/store/search?q=Java Practicals-DU");
             startActivity(Intent.createChooser(i,"Share Via"));
            return true;
           }
          Toast.makeText(getApplicationContext(), "You click on menu share", Toast.LENGTH_SHORT).show();

 return super.onOptionsItemSelected(item);

 }


    @SuppressLint("SetTextI18n")
    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();
        if (!isConnected(MainActivity.this))
            buildDialog(MainActivity.this).show();
        else if (coins == 0) {
            lessCoins();
        } else {
            if (id == R.id.one) {
                flag = 1;
                getSupportActionBar().setTitle("Command Line");
                if (temp == 0)
                    pdfView.fromAsset("FirstLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("FirstLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeOne.pdf").load();
                }
                coins = coins - 5;
            } else if (id == R.id.two) {
                flag = 2;
                getSupportActionBar().setTitle("Factorial");
                if (temp == 0)
                    pdfView.fromAsset("SecondLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("SecondLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeTwo.pdf").load();
                }
                coins = coins - 5;
            } else if (id == R.id.three) {
                flag = 3;
                getSupportActionBar().setTitle("Single Dimensional Array");
                if (temp == 0)
                    pdfView.fromAsset("ThirdLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("ThirdLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeThree.pdf").load();
                }
                coins = coins - 5;
            } else if (id == R.id.four) {
                flag = 4;
                getSupportActionBar().setTitle("Two Dimensional Array");
                if (temp == 0)
                    pdfView.fromAsset("FourthLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("FourthLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeFour.pdf").load();
                }
                coins = coins - 5;
            } else if (id == R.id.five) {
                flag = 5;
                getSupportActionBar().setTitle("Decimal To Binary");
                if (temp == 0)
                    pdfView.fromAsset("fifthLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("fifthLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeFive.pdf").load();
                }
                coins = coins - 5;
            } else if (id == R.id.six) {
                flag = 6;
                getSupportActionBar().setTitle("Prime");
                if (temp == 0)
                    pdfView.fromAsset("Sixth.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("Sixth.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeSix.pdf").load();
                }
                coins = coins - 5;

            } else if (id == R.id.seventh) {
                flag = 7;
                getSupportActionBar().setTitle("Sum of integers");
                if (temp == 0)
                    pdfView.fromAsset("SeventhLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("SeventhLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeSeven.pdf").load();
                }
                coins = coins - 5;

            } else if (id == R.id.eight) {
                flag = 8;
                getSupportActionBar().setTitle("String");
                if (temp == 0)
                    pdfView.fromAsset("EightLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("EightLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeEight.pdf").load();
                }
                coins = coins - 5;

            } else if (id==R.id.ninth) {
                flag = 9;
                getSupportActionBar().setTitle("Distance");
                if (temp == 0)
                    pdfView.fromAsset("NinthLogic.pdf").load();
                else if (temp == 1) {
                    pdfView.fromAsset("NinthLogic.pdf").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("CodeNine.pdf").load();
                }
                coins = coins - 5;
            }
           else if (id==R.id.tenth) {
            flag = 10;
            getSupportActionBar().setTitle("Modify");
            if (temp == 0)
                pdfView.fromAsset("TenthLogic.pdf").load();
            else if (temp == 1) {
                pdfView.fromAsset("TenthLogic.pdf").load();
            } else if (temp == 2) {
                pdfView.fromAsset("CodeTen.pdf").load();
            }
            coins = coins - 5;
        } else if (id==R.id.eleven) {
            flag = 11;
            getSupportActionBar().setTitle("Function Overloading");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id==R.id.twelve) {
            flag = 12;
            getSupportActionBar().setTitle("Access Modifier");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id == R.id.thirteen) {
            flag = 13;
            getSupportActionBar().setTitle("Variable length arguments");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;

        } else if (id == R.id.fourteen) {
            flag = 14;
            getSupportActionBar().setTitle("Boxing and UnBoxing");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id == R.id.fifteen) {
            flag = 15;
            getSupportActionBar().setTitle("Multi File Program");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id == R.id.sixteen) {
            flag = 16;
            getSupportActionBar().setTitle("Fibonacii Series");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id == R.id.seventeen) {
            flag = 17;
            getSupportActionBar().setTitle("Different level of protection");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        } else if (id == R.id.eighteen) {
            flag = 18;
            getSupportActionBar().setTitle("Divide by zero");
            if (temp == 0)
                pdfView.fromAsset("").load();
            else if (temp == 1) {
                pdfView.fromAsset("").load();
            } else if (temp == 2) {
                pdfView.fromAsset("").load();
            }
            coins = coins - 5;
        }
        else if (id == R.id.nineteen) {
                flag = 19;
                getSupportActionBar().setTitle("Nested try statements");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty) {
                flag = 20;
                getSupportActionBar().setTitle("Create Exception");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_one) {
                flag = 21;
                getSupportActionBar().setTitle("Priorities among thread");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_two) {
                flag = 22;
                getSupportActionBar().setTitle("Multithread Communication");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_three) {
                flag = 23;
                getSupportActionBar().setTitle("Not in syllabus");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_four) {
                flag = 24;
                getSupportActionBar().setTitle("Not in syllabus");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_five) {
                flag = 25;
                getSupportActionBar().setTitle("Banner");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_six) {
                flag = 26;
                getSupportActionBar().setTitle("URL/Location of code");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_seven) {
                flag = 27;
                getSupportActionBar().setTitle("Mouse handling events");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_eight) {
                flag = 28;
                getSupportActionBar().setTitle("Keyboard handling events");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.twenty_nine) {
                flag = 29;
                getSupportActionBar().setTitle("WIndow using main");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
            else if (id == R.id.thirty) {
                flag = 30;
                getSupportActionBar().setTitle("Push Button");
                if (temp == 0)
                    pdfView.fromAsset("").load();
                else if (temp == 1) {
                    pdfView.fromAsset("").load();
                } else if (temp == 2) {
                    pdfView.fromAsset("").load();
                }
                coins = coins - 5;
            }
      }
      DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
    private void lessCoins() {
    pdfView.fromAsset("").load();
        Toast.makeText(this, "You have 0 coins now", Toast.LENGTH_LONG).show();
    }
    @Override
    public void onRewardedVideoAdLoaded() {

    }

    @Override
    public void onRewardedVideoAdOpened() {

    }

    @Override
    public void onRewardedVideoStarted() {

    }

    @Override
    public void onRewardedVideoAdClosed() {
   }
        @Override
    public void onRewarded(RewardItem rewardItem) {
                 coins=coins+ rewardItem.getAmount();
            Toast.makeText(this,"You have now "+(coins)+" coins",Toast.LENGTH_SHORT).show();
        }
    @Override
    public void onRewardedVideoAdLeftApplication() {

    }
    @Override
    public void onRewardedVideoAdFailedToLoad(int i) {
    }

    @Override
    public void onRewardedVideoCompleted() {
   }


    @Override
    protected void onPause() {
        mAd.pause(this);
        super.onPause();
    }

    @Override
    protected void onResume() {
        mAd.resume(this);
        super.onResume();
    }

    @Override
    protected void onDestroy() {
        mAd.destroy(this);
        super.onDestroy();
    }

    public void myCoins(MenuItem item) {
        buildDialog2(MainActivity.this).show();
    }
}
